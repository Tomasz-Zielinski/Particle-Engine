{"id":"index.html","dependencies":[{"name":"./src\\ParticleEngine.ts","dynamic":true,"resolved":"C:\\Users\\Asaris\\Desktop\\Asaris\\Programming\\ParticleEngine\\src\\ParticleEngine.ts","parent":"C:\\Users\\Asaris\\Desktop\\Asaris\\Programming\\ParticleEngine\\index.html"},{"name":"C:\\Users\\Asaris\\Desktop\\Asaris\\Programming\\ParticleEngine\\package.json","includedInParent":true,"mtime":1549759490260}],"generated":{"html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\r\n    <title>Particle Engine</title>\r\n</head>\r\n\r\n<body>\r\n    <canvas></canvas>\r\n</body>\r\n\r\n<script src=\"/efa0df2a15d6eaa0c70f7ac8162adc6e.js\"></script>\r\n<script>var camera,\n    tick = 0,\n    scene,\n    renderer,\n    clock = new THREE.Clock(),\n    options,\n    spawnerOptions,\n    particleSystem;\ninit();\nanimate();\n\nfunction init() {\n  camera = new THREE.PerspectiveCamera(28, window.innerWidth / window.innerHeight, 1, 10000);\n  camera.position.z = 100;\n  scene = new THREE.Scene();\n  particleSystem = new ParticleEngine();\n  scene.add(particleSystem);\n  options = {\n    position: new THREE.Vector3(),\n    positionRandomness: .3,\n    velocity: new THREE.Vector3(),\n    velocityRandomness: .5,\n    color: 0xaa88ff,\n    colorRandomness: .2,\n    lifetime: 2,\n    size: 5,\n    sizeRandomness: 1\n  };\n  spawnerOptions = {\n    spawnRate: 15000,\n    horizontalSpeed: 1.5,\n    verticalSpeed: 1.33\n  };\n  renderer = new THREE.WebGLRenderer({\n    canvas: document.querySelector('canvas')\n  });\n  renderer.setPixelRatio(window.devicePixelRatio);\n  renderer.setSize(window.innerWidth, window.innerHeight);\n}\n\nfunction animate() {\n  requestAnimationFrame(animate);\n  var delta = clock.getDelta();\n  tick += delta;\n  if (tick < 0) tick = 0;\n\n  if (delta > 0) {\n    options.position.x = Math.sin(tick * spawnerOptions.horizontalSpeed) * 20;\n    options.position.y = Math.sin(tick * spawnerOptions.verticalSpeed) * 10;\n    options.position.z = Math.sin(tick * spawnerOptions.horizontalSpeed + spawnerOptions.verticalSpeed) * 5;\n\n    for (var x = 0; x < spawnerOptions.spawnRate * delta; x++) {\n      particleSystem.spawnParticle(options);\n    }\n  }\n\n  particleSystem.update(tick);\n  render();\n}\n\nfunction render() {\n  renderer.render(scene, camera);\n}</script>\r\n\r\n</html>"},"hash":"8dc3c4a821b57c5f8497f5cccd70392f","cacheData":{"env":{}}}